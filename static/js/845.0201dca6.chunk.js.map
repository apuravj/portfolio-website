{"version":3,"file":"static/js/845.0201dca6.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/Grid/traverseBreakpoints.js","../node_modules/@mui/system/esm/Grid/gridGenerator.js","../node_modules/@mui/system/esm/Grid/createGrid.js","../node_modules/@mui/material/esm/Grid/Grid.js","../node_modules/@mui/system/esm/Grid/deleteLegacyGridProps.js","../node_modules/@mui/material/esm/Box/boxClasses.js","../node_modules/@mui/material/esm/Box/Box.js","../node_modules/@mui/system/esm/createBox/createBox.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/esm/Container/Container.js"],"sourcesContent":["import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","export const filterBreakpointKeys = (breakpointsKeys, responsiveKeys) => breakpointsKeys.filter(key => responsiveKeys.includes(key));\nexport const traverseBreakpoints = (breakpoints, responsive, iterator) => {\n  const smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.\n\n  if (Array.isArray(responsive)) {\n    responsive.forEach((breakpointValue, index) => {\n      iterator((responsiveStyles, style) => {\n        if (index <= breakpoints.keys.length - 1) {\n          if (index === 0) {\n            Object.assign(responsiveStyles, style);\n          } else {\n            responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style;\n          }\n        }\n      }, breakpointValue);\n    });\n  } else if (responsive && typeof responsive === 'object') {\n    // prevent null\n    // responsive could be a very big object, pick the smallest responsive values\n\n    const keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));\n    keys.forEach(key => {\n      if (breakpoints.keys.includes(key)) {\n        // @ts-ignore already checked that responsive is an object\n        const breakpointValue = responsive[key];\n        if (breakpointValue !== undefined) {\n          iterator((responsiveStyles, style) => {\n            if (smallestBreakpoint === key) {\n              Object.assign(responsiveStyles, style);\n            } else {\n              responsiveStyles[breakpoints.up(key)] = style;\n            }\n          }, breakpointValue);\n        }\n      }\n    });\n  } else if (typeof responsive === 'number' || typeof responsive === 'string') {\n    iterator((responsiveStyles, style) => {\n      Object.assign(responsiveStyles, style);\n    }, responsive);\n  }\n};","import { traverseBreakpoints } from \"./traverseBreakpoints.js\";\nfunction getSelfSpacingVar(axis) {\n  return `--Grid-${axis}Spacing`;\n}\nfunction getParentSpacingVar(axis) {\n  return `--Grid-parent-${axis}Spacing`;\n}\nconst selfColumnsVar = '--Grid-columns';\nconst parentColumnsVar = '--Grid-parent-columns';\nexport const generateGridSizeStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.size, (appendStyle, value) => {\n    let style = {};\n    if (value === 'grow') {\n      style = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    }\n    if (value === 'auto') {\n      style = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        flexGrow: 0,\n        flexBasis: 'auto',\n        width: `calc(100% * ${value} / var(${parentColumnsVar}) - (var(${parentColumnsVar}) - ${value}) * (var(${getParentSpacingVar('column')}) / var(${parentColumnsVar})))`\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridOffsetStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.offset, (appendStyle, value) => {\n    let style = {};\n    if (value === 'auto') {\n      style = {\n        marginLeft: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        marginLeft: value === 0 ? '0px' : `calc(100% * ${value} / var(${parentColumnsVar}) + var(${getParentSpacingVar('column')}) * ${value} / var(${parentColumnsVar}))`\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridColumnsStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {\n    [selfColumnsVar]: 12\n  };\n  traverseBreakpoints(theme.breakpoints, ownerState.columns, (appendStyle, value) => {\n    const columns = value ?? 12;\n    appendStyle(styles, {\n      [selfColumnsVar]: columns,\n      '> *': {\n        [parentColumnsVar]: columns\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridRowSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value) => {\n    const spacing = typeof value === 'string' ? value : theme.spacing?.(value);\n    appendStyle(styles, {\n      [getSelfSpacingVar('row')]: spacing,\n      '> *': {\n        [getParentSpacingVar('row')]: spacing\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridColumnSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value) => {\n    const spacing = typeof value === 'string' ? value : theme.spacing?.(value);\n    appendStyle(styles, {\n      [getSelfSpacingVar('column')]: spacing,\n      '> *': {\n        [getParentSpacingVar('column')]: spacing\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridDirectionStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.direction, (appendStyle, value) => {\n    appendStyle(styles, {\n      flexDirection: value\n    });\n  });\n  return styles;\n};\nexport const generateGridStyles = ({\n  ownerState\n}) => {\n  return {\n    minWidth: 0,\n    boxSizing: 'border-box',\n    ...(ownerState.container && {\n      display: 'flex',\n      flexWrap: 'wrap',\n      ...(ownerState.wrap && ownerState.wrap !== 'wrap' && {\n        flexWrap: ownerState.wrap\n      }),\n      gap: `var(${getSelfSpacingVar('row')}) var(${getSelfSpacingVar('column')})`\n    })\n  };\n};\nexport const generateSizeClassNames = size => {\n  const classNames = [];\n  Object.entries(size).forEach(([key, value]) => {\n    if (value !== false && value !== undefined) {\n      classNames.push(`grid-${key}-${String(value)}`);\n    }\n  });\n  return classNames;\n};\nexport const generateSpacingClassNames = (spacing, smallestBreakpoint = 'xs') => {\n  function isValidSpacing(val) {\n    if (val === undefined) {\n      return false;\n    }\n    return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;\n  }\n  if (isValidSpacing(spacing)) {\n    return [`spacing-${smallestBreakpoint}-${String(spacing)}`];\n  }\n  if (typeof spacing === 'object' && !Array.isArray(spacing)) {\n    const classNames = [];\n    Object.entries(spacing).forEach(([key, value]) => {\n      if (isValidSpacing(value)) {\n        classNames.push(`spacing-${key}-${String(value)}`);\n      }\n    });\n    return classNames;\n  }\n  return [];\n};\nexport const generateDirectionClasses = direction => {\n  if (direction === undefined) {\n    return [];\n  }\n  if (typeof direction === 'object') {\n    return Object.entries(direction).map(([key, value]) => `direction-${key}-${value}`);\n  }\n  return [`direction-xs-${String(direction)}`];\n};","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isMuiElement from '@mui/utils/isMuiElement';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport useThemeSystem from \"../useTheme/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { generateGridStyles, generateGridSizeStyles, generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridDirectionStyles, generateGridOffsetStyles, generateSizeClassNames, generateSpacingClassNames, generateDirectionClasses } from \"./gridGenerator.js\";\nimport deleteLegacyGridProps from \"./deleteLegacyGridProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiGrid',\n    defaultTheme\n  });\n}\nexport default function createGrid(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    useTheme = useThemeSystem,\n    componentName = 'MuiGrid'\n  } = options;\n  const useUtilityClasses = (ownerState, theme) => {\n    const {\n      container,\n      direction,\n      spacing,\n      wrap,\n      size\n    } = ownerState;\n    const slots = {\n      root: ['root', container && 'container', wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...generateDirectionClasses(direction), ...generateSizeClassNames(size), ...(container ? generateSpacingClassNames(spacing, theme.breakpoints.keys[0]) : [])]\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  function parseResponsiveProp(propValue, breakpoints, shouldUseValue = () => true) {\n    const parsedProp = {};\n    if (propValue === null) {\n      return parsedProp;\n    }\n    if (Array.isArray(propValue)) {\n      propValue.forEach((value, index) => {\n        if (value !== null && shouldUseValue(value) && breakpoints.keys[index]) {\n          parsedProp[breakpoints.keys[index]] = value;\n        }\n      });\n    } else if (typeof propValue === 'object') {\n      Object.keys(propValue).forEach(key => {\n        const value = propValue[key];\n        if (value !== null && value !== undefined && shouldUseValue(value)) {\n          parsedProp[key] = value;\n        }\n      });\n    } else {\n      parsedProp[breakpoints.keys[0]] = propValue;\n    }\n    return parsedProp;\n  }\n  const GridRoot = createStyledComponent(generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridSizeStyles, generateGridDirectionStyles, generateGridStyles, generateGridOffsetStyles);\n  const Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const theme = useTheme();\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n\n    // TODO v8: Remove when removing the legacy Grid component\n    deleteLegacyGridProps(props, theme.breakpoints);\n    const {\n      className,\n      children,\n      columns: columnsProp = 12,\n      container = false,\n      component = 'div',\n      direction = 'row',\n      wrap = 'wrap',\n      size: sizeProp = {},\n      offset: offsetProp = {},\n      spacing: spacingProp = 0,\n      rowSpacing: rowSpacingProp = spacingProp,\n      columnSpacing: columnSpacingProp = spacingProp,\n      unstable_level: level = 0,\n      ...other\n    } = props;\n    const size = parseResponsiveProp(sizeProp, theme.breakpoints, val => val !== false);\n    const offset = parseResponsiveProp(offsetProp, theme.breakpoints);\n    const columns = inProps.columns ?? (level ? undefined : columnsProp);\n    const spacing = inProps.spacing ?? (level ? undefined : spacingProp);\n    const rowSpacing = inProps.rowSpacing ?? inProps.spacing ?? (level ? undefined : rowSpacingProp);\n    const columnSpacing = inProps.columnSpacing ?? inProps.spacing ?? (level ? undefined : columnSpacingProp);\n    const ownerState = {\n      ...props,\n      level,\n      columns,\n      container,\n      direction,\n      wrap,\n      spacing,\n      rowSpacing,\n      columnSpacing,\n      size,\n      offset\n    };\n    const classes = useUtilityClasses(ownerState, theme);\n    return /*#__PURE__*/_jsx(GridRoot, {\n      ref: ref,\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ...other,\n      children: React.Children.map(children, child => {\n        if (/*#__PURE__*/React.isValidElement(child) && isMuiElement(child, ['Grid']) && container && child.props.container) {\n          return /*#__PURE__*/React.cloneElement(child, {\n            unstable_level: child.props?.unstable_level ?? level + 1\n          });\n        }\n        return child;\n      })\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n    columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    component: PropTypes.elementType,\n    container: PropTypes.bool,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n    rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])), PropTypes.object]),\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n    wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap'])\n  } : void 0;\n\n  // @ts-ignore internal logic for nested grid\n  Grid.muiName = 'Grid';\n  return Grid;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createGrid } from '@mui/system/Grid';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport { styled } from \"../styles/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\n/**\n *\n * Demos:\n *\n * - [Grid](https://mui.com/material-ui/react-grid/)\n *\n * API:\n *\n * - [Grid API](https://mui.com/material-ui/api/grid/)\n */\nconst Grid = createGrid({\n  createStyledComponent: styled('div', {\n    name: 'MuiGrid',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, ownerState.container && styles.container];\n    }\n  }),\n  componentName: 'MuiGrid',\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid'\n  }),\n  useTheme\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Defines the offset value for the type `item` components.\n   */\n  offset: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Defines the size of the the type `item` components.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @internal\n   * The level of the grid starts from `0` and increases when the grid nests\n   * inside another grid. Nesting is defined as a container Grid being a direct\n   * child of a container Grid.\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <Grid container> // level 1\n   *     <Grid container> // level 2\n   * ```\n   *\n   * Only consecutive grid is considered nesting. A grid container will start at\n   * `0` if there are non-Grid container element above it.\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <div>\n   *     <Grid container> // level 0\n   * ```\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <Grid>\n   *     <Grid container> // level 0\n   * ```\n   */\n  unstable_level: PropTypes.number,\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap'])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const Component = Grid;\n  const requireProp = requirePropFactory('Grid', Component);\n  // eslint-disable-next-line no-useless-concat\n  Component['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Component.propTypes,\n    direction: requireProp('container'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container')\n  };\n}\nexport default Grid;","const getLegacyGridWarning = propName => {\n  if (['item', 'zeroMinWidth'].includes(propName)) {\n    return `The \\`${propName}\\` prop has been removed and is no longer necessary. You can safely remove it.`;\n  }\n\n  // #host-reference\n  return `The \\`${propName}\\` prop has been removed. See https://mui.com/material-ui/migration/upgrade-to-grid-v2/ for migration instructions.`;\n};\nconst warnedAboutProps = [];\n\n/**\n * Deletes the legacy Grid component props from the `props` object and warns once about them if found.\n *\n * @param {object} props The props object to remove the legacy Grid props from.\n * @param {Breakpoints} breakpoints The breakpoints object.\n */\nexport default function deleteLegacyGridProps(props, breakpoints) {\n  const propsToWarn = [];\n  if (props.item !== undefined) {\n    delete props.item;\n    propsToWarn.push('item');\n  }\n  if (props.zeroMinWidth !== undefined) {\n    delete props.zeroMinWidth;\n    propsToWarn.push('zeroMinWidth');\n  }\n  breakpoints.keys.forEach(breakpoint => {\n    if (props[breakpoint] !== undefined) {\n      propsToWarn.push(breakpoint);\n      delete props[breakpoint];\n    }\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    propsToWarn.forEach(prop => {\n      if (!warnedAboutProps.includes(prop)) {\n        warnedAboutProps.push(prop);\n        console.warn(`MUI Grid: ${getLegacyGridWarning(prop)}\\n`);\n      }\n    });\n  }\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from \"../className/index.js\";\nimport { createTheme } from \"../styles/index.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport boxClasses from \"./boxClasses.js\";\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const {\n      className,\n      component = 'div',\n      ...other\n    } = extendSxProp(inProps);\n    return /*#__PURE__*/_jsx(BoxRoot, {\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme,\n      ...other\n    });\n  });\n  return Box;\n}","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.7.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\n\nclass GroupAnimation {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\n\nexport { isWaapiSupportedEasing };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n        pseudoElement,\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue?.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { createGeneratorEasing, supportsLinearEasing, calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : \"easeOut\";\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = this.currentTime ?? 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n    get finished() {\n        return this.currentFinishedPromise;\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, startWaapiAnimation, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime ?? this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    get finished() {\n        return this.resolved.animation.finished;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            (name !== \"transform\" || !transformTemplate) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupAnimationWithThen } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupAnimationWithThen([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.7.4\", `Attempting to mix Motion versions ${nextValue.version} with 12.7.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["createStyled","traverseBreakpoints","breakpoints","responsive","iterator","smallestBreakpoint","keys","Array","isArray","forEach","breakpointValue","index","responsiveStyles","style","length","Object","assign","up","breakpointsKeys","responsiveKeys","filter","key","includes","undefined","filterBreakpointKeys","getSelfSpacingVar","axis","getParentSpacingVar","selfColumnsVar","parentColumnsVar","generateGridSizeStyles","_ref","theme","ownerState","styles","size","appendStyle","value","flexBasis","flexGrow","maxWidth","flexShrink","width","generateGridOffsetStyles","_ref2","offset","marginLeft","generateGridColumnsStyles","_ref3","container","columns","generateGridRowSpacingStyles","_ref4","rowSpacing","spacing","generateGridColumnSpacingStyles","_ref5","columnSpacing","generateGridDirectionStyles","_ref6","direction","flexDirection","generateGridStyles","_ref7","minWidth","boxSizing","display","flexWrap","wrap","gap","generateSizeClassNames","classNames","entries","_ref8","push","String","generateSpacingClassNames","arguments","isValidSpacing","val","Number","isNaN","_ref9","generateDirectionClasses","map","_ref10","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","root","useThemePropsDefault","useThemePropsSystem","Grid","options","createStyledComponent","useThemeProps","useTheme","useThemeSystem","componentName","parseResponsiveProp","propValue","shouldUseValue","parsedProp","GridRoot","React","inProps","ref","themeProps","extendSxProp","propsToWarn","item","zeroMinWidth","breakpoint","deleteLegacyGridProps","className","children","columnsProp","component","sizeProp","offsetProp","spacingProp","rowSpacingProp","columnSpacingProp","unstable_level","level","other","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","_jsx","as","clsx","child","isMuiElement","muiName","createGrid","styled","useDefaultProps","generateUtilityClasses","Box","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","createBox","THEME_ID","boxClasses","ClassNameGenerator","generate","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","getVelocity","resolveVariantFromProps","definition","custom","current","velocity","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","skipAnimations","useManualTiming","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","frameloop","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","indexOf","removeItem","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","memo","result","supportsScrollTimeline","window","ScrollTimeline","GroupAnimation","animations","runAll","finished","all","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupAnimationWithThen","onResolve","_onReject","finally","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isGenerator","type","isBezierDefinition","easing","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","e","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","isWaapiSupportedEasing","every","activeAnimations","layout","mainThread","waapi","generateLinearEasing","resolution","points","numPoints","round","substring","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","element","valueName","keyframes","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","fill","iterations","onfinish","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","atan","sqrt","matrix3dParsers","defaultTransformValue","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_bbox","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","resolvedKeyframes","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","mixNumber","to","progress","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGeneratorEasing","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","getAttribute","motion","createDomVisualElement","getThemeProps","capitalize","fixed","disableGutters","Container","ContainerRoot","breakpointValueKey","xs","classesProp","createContainer"],"sourceRoot":""}